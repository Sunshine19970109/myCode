开发一个项目时间分配
1 用三分之一的时间去想 
2 用不到三分之一的时间去写代码 
3 用三分之一的时间去调试，测试 


一、开发思路
	1 需求
	和需求人员沟通需求，明确需求
	2 设计(图文)
	先将功能拆分成若干请求
	每个请求画出程序执行的过程图
	>根据操作推导出本功能所包含的请求
	
	3 开发
	逐个请求逐个组件开发

请求执行图的作用?
	1 不画这个图不知道，一画吓一跳，画了之后步骤没想到这么清晰  
	把每个请求都画出它的执行流程图，每个请求的执行思路会非常的  
清楚，然后再根据依赖关系，标出开发的过程。  
	你一个项目的所有功能的请求图都画出来的时候你想程序不会写都难。  
	有没有感受到，你已经成为了一个程序员。  


为什么设计实体类的时候类型都用封装类型?
	比如null,因为封装类型可以为null
	
今天又对枚举有了更深入的理解:
	状态  列举 
	如果是个事物有很多的状态，可以把它的每种状态列举出来，用常数 
	或者char字符指代 

statement和prepareStatement
prepareStatement更适合发送动态的
原理:
statement是一次发送
prepareStatement是分两次发送:
	statement是一次发送
	prepareStatement分为两次发送
	一次发sql用?占位
	一次发对应的参数

如果按照编程的思路去解决问题就没有解决不了的问题?
	1 复杂的问题 
	需要将你解决问题需要的数据和需要用到的技术，工具全部列出来 
	做一个问题处理的详细设计方案。  


补充:
	1 千万不能形成抄代码的习惯，必须得自己写代码，实在写不出来
是因为你的文档不够详细，请再设计文档，再画图。  
	工作的时候遇到问题可能几分钟，15分钟，半个小时，一个小时
一中午，一天都解决不了，这个是常态，别大惊小怪。  
	出了问题，没事，就憋着呗，反正又憋不死。  
	憋着憋着就憋出来了  


怎么做设计文档?
	做设计文档的目的是使你的开发思路更加清晰，提前解决你开发中
会遇到的的问题，提取出你开发中会用到的技术和工具，但是如果开发文档
是给自己用最好不要写的太过于详细，因为这样会非常的复杂，很乱你也不想
看，只需要把你生疏的地方，不会的地方写下来就可以了。

为什么你自己写的代码回头就到处报错?  
	1 你没有清楚的理解需求的这个流程，请求流程图画的有问题  
	2 你的每一段写完没有测试，把问题放在最后到时候到处报错
然后你也不知道应该修改哪里。  
	解决方案:  
		设计文档做的时候，必须把怎么测试设计出来不然就别写了
	浪费自己时间，破坏自己心情。


EL表达式的作用:
	1 获取浏览器给服务器的参数
	value="${param.adminCode}"
	2 获取bean属性
	3 运算

一、完善登录功能，记住密码。


1 怎么在课后复习?
	课后复习应该不仅仅复习代码怎么写，更多的应该复习的是原理，
用法，下次在什么时候用。

2 网页复用
	声明
	根据<%@include file=""%>标签也可以实现网页的复用
，复用非常的重要，它不是一件事，它是整个项目的一生，你以后的扩展修改
都会变得简单，容易。
	只要网页上有重复的东西就可以复用，js可以复用事件，逻辑。
css,可以复用样式，jsp可以复用页面，


异常处理:
	1 将异常抛给容器，但底层的错误提示不要反回给用户
	注意：异常只允许抛service指定的异常，不能超出指定范围
	使用如下写法：throw new ServletException(e);
	2 在web.xml文件中配置错误处理页面节点












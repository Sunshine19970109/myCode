一。JDBC对事物的支持
1 默认的方式
	JDBC默认会自动管理事物
	每次调用executeUpdate()时它会自动commit
	一个业务只包含一次DML

2 手动管理方式 
	取消自动:con.setAutoCommit(false) 
	手动提交:conn.commit() 
	手动回滚:conn.rollback(); 

3 什么是事务
	满足如下四个特征的数据库访问叫事务 
	原子性:事务是一个完整的过程，要么都成功，要么都失败 
	一致性:事务前后的数据一致，即收支平衡 
	隔离性:事务过程中的数据要隔离，不允许别人访问 
	持久性:事务一旦达成，就永久有效. 
	上述四句话是一个整体，构成事务的特征 

补充:JDBC中的日期类型
	在JDBC中要使用java.sql下的日期 
	java.sql.Date年月日 
	java.sql.Time时分秒 
	java.sql.Timestamp--时间戳--年月日时分秒 
	上述日期都是java.util.Date的子类 

批量处理数据

获取自动生成的ID
	1 反查
	insert into user values(seq.nextval,?,?)
	select * from user where username=?
	
	2 
	select seq.nextval from dual ->id
	insert into user values(id,?,?)
	
	3 让ps对象返回生成的ID(*)
	详见案例
	
JDBC对分页的支持
	1  假分页(内存分页) 
		第一次查询时获取所有数据，并将其存入内存(List) 
		第n次查询时不再访问数据库，而是从内存中(List)取数 
		特点:第一次查询巨慢，再次查询快，耗内存 
		适合数据量小的项目 
	2 真分页(物理分页) 
		每次查询时都是获取一页数据 
		使用分页的SQL进行查询 
		特点:每次查询速度都一样，不耗内存 
		适合任意项目 
	
1 使用步骤
2 管理连接
	DBTool(DriverManager)
	DBUtil(DataSource)
3.Statement和PreparedStatement
4 ResultSet
5 事务
6 批量添加数据
7 获得自动生成的ID
8 分页

学习一个知识点不是直接跳出来的知识，
应该先了解一下这个知识点的背景，你为什么学习这个知识点，
它可以解决什么问题

DAO封装对数据的访问
	DAO(Data Access Object)数据访问对象 
	建立在数据库和业务逻辑层之间，封装所有对数据库的访问 
	目的: 数据访问逻辑和业务逻辑分开 
	entity(实体) 

DAO封装对数据的访问
	为了建立一个健壮的java应用，需要将所有对数据源的
	访问操作抽象封装在一个公共API中，包括:
		-建立一个接口，接口中定义了应用程序中将会用到的所有
		事务方法
		-建立接口的实现类，实现接口对应的所有方法，和数据库直接交互
	在应用程序中，当需要和数据源交互时则使用DAO接口，
	不涉及任何数据库的具体操作

DAO封装对数据的访问
	DAO通常包括:
	1 一个DAO工厂类； 
	2 一个DAO接口； 
	3 一个实现DAO接口的具体类； 
	4 数据传递对象(实体对象或值对象) 
	接口，工厂将来再讲 
	当前的案例太简单，体会不到作用 

补充2:JavaBean
满足如下规范的类:(只有满足规范才能有健壮性,都是经验) 
	1 必须有包 
	2 必须有无参构造 
	3 必须实现序列化接口 
		想将这个对象存在硬盘上，或者在网络上传输 
		这个对象，就必须将这个序列化为二进制数据 
	4 通常会有get/set方法 





<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	<!-- 使用spring表达式读取
		其他的bean的属性 -->
	<bean id="ib1" class="value.InfoBean">
	    <property name="name"
	    value="#{valueBean.name}"/>
	    <!-- 调用了getName() -->
	    <property name="interest"
	        value="#{valueBean.interest[1]}"></property>
	    <property name="score"
	    value="#{valueBean.score['English']}"/>
	    <property name="pageSize"
	        value="#{config.pageSize}"/>
	</bean>
	
	
	
	
	<!-- 注入基本类型的值 -->
	<bean id="valueBean" class="value.ValueBean">
		<property name="name" value="关关"></property>
		<property name="age" value="22"></property>
		<property name="interest">
			<list>
				<value>台球</value>
				<value>篮球</value>
				<value>象棋</value>
				<value>象棋</value>
			</list>
		</property>
		<property name="city">
			<set>
				<value>北京</value>
				<value>上海</value>
				<value>武汉</value>
				<value>武汉</value>
			</set>
		</property>
		<property name="score">
			<map>
				<entry key="English" value="70"/>
				<entry key="math" value="100"/>
			</map>
		</property>
		<property name="db">
			<props>
				<prop key="username">Sally</prop>
				<prop key="password">1234</prop>
			</props>
		</property>
	</bean>
	
	
	<!-- 将集合类型的值配置成一个bean -->
	<!-- 
		优点:这种方式是可以复用的。
		util:list	表示使用的是util命名空间下的list元素。
		命名空间:为了区分同名的元素而添加的前缀
	 -->
	<util:list id="interestBean">
		<value>喝酒</value>
		<value>烫头</value>
		<value>抽烟</value>
	</util:list>
	<util:set id="cityBean">
		<value>长沙</value>
		<value>岳阳</value>
		<value>华容</value>
	</util:set>
	<util:map id="scoreBean">
		<entry key="math" value="80"/>
		<entry key="English" value="59.5"/>
	</util:map>
	<util:properties id="dbBean">
		<prop key="username">Giving</prop>
		<prop key="password">test</prop>
	</util:properties>
	<!-- 采用引用的方式注入集合类型的值 -->
	<bean id="eb1" class="value.ExampleBean">
		<property name="interest" ref="interestBean"></property>
		<property name="city" ref="cityBean"/>
		<property name="score" ref="scoreBean"></property>
		<property name="db" ref="dbBean"></property>
	</bean>
	
	<!-- 读取.properties文件的内容 -->
	<!-- 
		location:指属性文件的位置.
		注:classpath,表示让容器依据类路径去查找属性文件。
		容器会读取指定位置的文件内容，并且将这些内容存放到
		Properties对象里面，对象的id="config"
	 -->
	<util:properties id="config" 
	location="classpath:config.properties"></util:properties>
</beans>

















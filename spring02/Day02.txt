1 IOC/DI
	(1)什么是IOC(Inversion of Controll)控制反转
	对象的关系由容器来建立，不需要在一个类中new 另外一个对象
	把你需要的功能写在配置文件中，如果需要该对象，直接在配置文件修改就可以
	不需要修改原来的对象，因为你需要的是功能，而不在乎它是哪个对象，只要
	满足条件就可以了。--控制寻找对象
	(2)什么是DI()(Dependency Injection 依赖注入)
	容器可以通过调用set方法或者构造器来建立对象之间的依赖关系。
	注:
		IOC是目标，DI是手段。
	(3)依赖注入的两种方式
		1)方式一	set方法注入
		step1. 添加set方法
		step2. 在配置文件中，使用<property>元素来配置
		2)方式二	构造器注入
		step1.添加构造器
		step2.在配置文件当中，使用<constructor-arg>元素来配置
	(4)自动装配(了解)
		注：自动装配，指的是容器依据某些规则，自动建立对象之间的依赖关系。
		1)默认情况下，容器不会自动装配。
		2)设置autowire属性
			byName:依据属性名查找对应的bean
	(5)注入基本类型的值
	使用value属性来注入，spring容器会帮我们做一些类型转换工作，
	比如将字符串转换为数字
	User
		name
		age
	(6)注入集合类型的值(List,Set,Map,Properties)
	方式一	直接注入
	方式二	引用方式注入
	step1.	将集合类型的值先配置成一个bean.
	step2.	再将这个bean注入到对应的bean里面。
set注入，constructor注入，基本类型注入的区别
	都用name属性，set用 name	ref
	constructor用index ref
	基恩类型:name value

补充:
	<%@taglib uril="http://xxx prefix="d" >
	<d:if test="">
	命名空间	namespace	为了区分同名的元素而添加的限定
	
补充:
	Object>interface>abstractClass>Class>对象>方法和属性		
练习:
	Restaurant类
	Waiter类
	采用set方法 将Waiter 注入	到Restaurant
练习:
	Engineer类	Car类
	将Engineer注入到Car,要求采用构造器注入
练习:
	设计一个类(SomeBean),采用引用的方式注入四中集合类型的值。
	List,Set,Map,Properties
练习:
	什么是IOC?什么是DI?两者有什么关系?
练习:
	将AdminDAO注入到LoginService.
	要求使用set方法注入。
	LoginService
		private AdminDao dao;
		setDao(AdminDAO dao)
		
	AdminDAO接口
		public void findByAdminCode();
	AdminDAOImpl类

什么是IOC?什么是DI?两者有什么关系?
	IOC指的是控制反转，对象之间的关系不用自己创建，
	由容器创建对象之间的依赖关系
	DI指依赖注入
		分为两种方式，set注入和constructor注入
		IOC是目标，DI是手段



















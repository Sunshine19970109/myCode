1 自定义对象
	1 直接量(JSON)
	{"name":"zhangsan","age":25} 
	{}代表对象，内含键值对
	key通常是字符串，value可以是任意类型的数据
	简单，方便
	2 构造器(首字母大写的函数)
		2.1 内置构造器
			特殊:Date,Array,String,RegExp
			通用:Object
		2.2 自定义构造器
			创建一个首字母大写的函数
			明确的声明参数
			将参数记录到此对象上
			
总结:
	无论用那个方式创建出来的对象都一样，都是Object
	若对象需要复用，建议用第3种			
			
2 事件
	1 事件的概述
		1)什么是事件
			就是用户的操作，就是JS调用的时机
		2)事件的分类
			鼠标事件
			键盘事件
			状态事件:某条件成立时自动触发
	2 事件的定义
		1)直接定义事件
		onclick="f1(event)
		2)动态绑定事件
			在页面加载后
			通过js获取节点
			通过修改属性的方式给节点追加属性
	3 事件对象(*)
		1)什么是事件对象
			在事件触发的那一刻
			浏览器会创建一个对象，用来封装事件相关的信息
			包括:鼠标的坐标，键盘的按键等
			该对象叫做事件对象(event)
		2)如何获得事件对象
		  1 直接定义事件时
		  	在调用函数时传入event
		  	在声明的函数上加参数接收event
		  2 动态绑定事件时
		  	在调用函数时浏览器会自动传入event
		  	在声明的函数上加参数接收event
	4 事件机制(*)
		1)什么是冒泡机制
			事件是由内向外传播的
		2)如何取消冒泡
			if(e.stopPropagation){
				e.stopPropagation();
			}else{
				e.cancelBubble=true;
			}
		3)冒泡机制的作用	
			可以简化事件定义
			具体看计算器案例
			
		4)待解决问题
			在简化事件发生的时候，需要知道事件发生的具体部位
			这个位置称之为:事件源，通过事件对象可以获得事件源
			
补充1:面试的时候,面试官一般喜欢问这个技术有什么优缺点?
	1 一般就是因为有优点所以才用的，所以更关注缺点 
	2 缺点如果你能答出来最好了，如果答不出来， 
	可以蒙两个原因(因为很多的框架就是来解决这样的问题的) 
		1 开发效率低 
		2 耦合度高(谁和谁互相依赖的程度) 
			耦合度在维护代码的时候非常重如果耦合度低，你
			可能只需要修改几个地方，如果高可能需要修改很多的地方 		
			
			
补充2:一般看书的话直接来理解一个知识的话是不好理解的
	解决办法:一些不好理解的知识，你最好可以找到它的应用场景 
	结合应用场景(例子)去理解。	 	 	
			
补充3:为什么自学的时候遇到问题会很麻烦
	1 因为陌生所以恐惧，你不能控制它，在你看来这个问题可能是最难的问题了
	所以你会告诉自己这个问题可能会 
	很难，需要一周，一个月，一年，你这个问题别人从没碰到过， 
	陌生使你恐惧，恐惧使你放弃。	 
	2 唯一的办法就是让陌生变为熟悉	 	
			
			
			
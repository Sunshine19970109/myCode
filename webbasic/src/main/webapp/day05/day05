JavaScript的特点:
	可以使用任何文本编辑器工具编写 
	有浏览器内置的JavaScript引擎执行代码 
	1 解释执行:事先不编译，逐行执行 
	2 基于对象:内置大量现成对象 
	
   适宜:
   1 客户端数据计算 
   2 客户端表单合法性验证 
   3 浏览器事件触发 
   4 网页特殊显示效果制作 
   5 服务器的异步数据提交 
   
javaScript的使用方式(参考CSS)
	1 事件定义式--在事件定义时直接写js
	2 嵌入式---使用<sript>标签
	3 文件调用式
		代码位于单独的.js文件中，html页面引用.js文件
		
1 如何获得一个元素?
	document.getElementById(id)
2 如何读取input的值?
	input.value
3 如何向span内写入内容?
	span(id).innerHTML="内容";

JS调试技巧
	1 看控制台报错信息
	不管能否看懂，都必须去看
	对于反复出现的错误要记住
	多写多练的目的就是多报错，然后学习调试的技巧
	2 打桩
	有时候你把方法中的语法写错了，方法就识别不了了，然后报错未定义，
		1 跟踪程序执行的过程
		2 观察变量是否变化
	3 排除法
	每次删除一部分代码，看程序还是否报错
	建议采用二分法，每次删除一半代码
	此方法适合定位问题

JS中的关系运算符
	与Java不同的地方
		a==b true
		a===b false
		
JS中的表达式(前提条件是:必须是在条件表达式中，比如if while swich)
	0---false
	null--false
	""--false
	undefined---false
	NaN---false
	"非空"值---true

简要描述JavaScript的数据类型
	JavaScript的数据类型可以分为三类:基本类型，特殊类型和复杂类型。
基本类型有string、number、boolean三种。其中，字符串是使用一对单引号
或者一对双引号括起来的任意文本；而数据类型都采用64位浮点格式储存，不区分整数
和小数；布尔(逻辑)只能有两个值:true或false.
	特殊类型null、undefined两种。其中Undefined这个值表示变量不
含有值，即声明了变量但从未赋值；null在程序中代表"无值"或者"无对象"，因此，
可以通过将变量的值设置为null来清空变量。
	复杂类型指其他对象，如Array、Date、Object等

2 JavaScript中，运算符==和===的区别是什么?
	双等号，只要值相等就可以了，两遍的类型可以不同
	===，必须两边的数据类型和值都相等



















		
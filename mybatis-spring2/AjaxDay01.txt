ajax--改善用户体验的框架
	自己要及时的总结，不要求多，要沉淀下来变成
自己的

3.ajax(asnychronous javascript and xml 
异步的javaScript和xml)
	如果返回的数据返回的比较多，返回JSON
	注册:
	账号 king
	密码
	...
	
登陆页面
	一旦提交请求，浏览器端会销毁页面
当密码有问题的时候，服务端返回的页面和浏览器端差不多。
问题
	a.服务器端返回新的页面之前，用户只能等待
	b.服务器和浏览器之间，会传输大量的冗余的数据
	
(1)ajax是什么?
	是一种用来改善用户体验的技术，本质上是利用浏览器
提供的一个特殊对象(XMLHttpRequest对象，一般也可以称
之为ajax对象)向服务器发送异步请求；服务器返回部分数据，
浏览器利用这些数据对当前页面做部分更新；整个过程，页面
无刷新，不打断用户的操作。
注:
	异步请求，指的是，当ajax对象发送请求时，浏览器
不会销毁当前页面，用户仍然可以对当前页面做其他操作。
(2)如何获得ajax对象
	ie5.5 ActiveXObject
	chrome firefox	XMLHttpRequest
	w3c
	function getXhr(){
		var=null;
		if(window.XMLHttpRequest){
			//非ie浏览器
			xhr = new XMLHttpRequest;
		}else{
		  xhr=new ActiveXObject('MicroSoft.XMLHttp');
		}
		return xhr;
	}
(3)ajax对象的几个重要属性
	属性一:
	onreadystatechange:绑定事件处理函数
用来处理readystatechange事件。(相当于一个监视器)
	注:当ajax对象的readyState属性值发生了任何的
改变，比如从0变成1，就会产生readystatechange事件
	属性二:
	readyState:有5个值(分别是0,1,2,3,4),
用来获取ajax对象与服务器通信的进展。其中4表示ajax
对象已经获得了服务器返回的所有的数据。
	属性三:
	responseText:获得服务器返回的文本数据。
	属性四:
	responseXML:获得服务器返回的xml数据。
	属性五:
	status:获得状态码。
(4)编程步骤
	step1.获得ajax对象
	比如	var xhr = getXhr();
	step2.调用ajax对象的方法，发送请求
	方式一:get请求
	//准备工作
	xhr.open('get','check.do?
	adminCode=king&XXX=xxx',true);
	//绑定事件处理函数
	xhr.onreadystatechange=f1;
	//发送数据包，参数一定要加一个null,不然有的
浏览器可能会出现兼容性问题。
	xhr.send(null);
	注:
		true:异步(浏览器不会销毁当前页面，用户
	仍然可以对当前页面做其他操作)
		false:同步(浏览器不会销毁当前页面，但是
	会锁定当前页面，用户不能对页面做任何操作)。
	方式二:post请求
	step3.编写服务器端的程序
	注:不需要返回完整的页面，只需要返回部分数据。
	step4.编写事件处理函数
	if(xhr.readyState==4&&
	xhr.status==200){
		//ajax对象已经获得了服务器返回的所有数据，
		//而且服务器处理正确
	}
















JS：
	函数定义:
	function f2(){
		//提示框
		alert('嵌入式使用JS');
	}
	//直接定义式
	onclick="alert('事件定义式JS')"
	拿到指定id的标签
	var num_obj = document.getElementById("num");
	//获取标签的值
	var num = num_obj.value;
	判断是否为数字
	if(isNaN(num)){}
	为标签赋值
	result_obj.innerHTML=n*n;
	解析出数字
	var n = parseInt(num);
	正则表达式
	var reg = /^\w{3,20}$/
	正则检验reg.test(name)
	
JS中的常用内置对象
	String对象
	Number对象
	Boolean对象
	Array对象
	Math对象
	Date对象
	RegExp对象
	Function对象
	
Date对象的常用方法
	读写时间的毫秒数
	getTime()、setTime(毫秒)
	读写时间分量
	getDate()、getDay()、getFullYear()等
	setDate()、setDay()、setFullYear()等
	转为字符串
	toString()
	toLocaleTimeString()
	toLocaleDateString()
	
Number保留小数位数
	n.toFixed(3)
创建数组
	var a1=["zhangsan",25,false]
	console.log(a1[0]);
	//未知数据
	var a2 = new Array();
	a2.push("lisi");
	a2.push(28);
	a2.push(true);
	console.log(a2[0])
数组倒转
	var arr=[6,12,4,1,3,8];
	console.log(arr.reverse());
	数组排序
	arr.sort();
	console.log(arr);
	
function x(a,b){return a-b}
	只有数字才有减法，所以js是一定会把你输入的东西变为数字的JS中
	的一切都是对象，函数也是对象，所以可以把函数当做参数传入
	arr.sort(function(a,b){
		return a-b;	
	})
	console.log(arr);
如何创建日期
	var d1 = new Date();
	var d2 = new Date("2017/05/01 11:11:11")
	console.log(d1)
	console.log(d2)
	console.log(d1.toLocaleDateString());
	console.log(d2.toLocaleTimeString());
读取时间分量自己设置格式
	var y = d1.getFullYear();
	var m = d1.getMonth()+1;
	var d = d1.getDate();
	var today = y+"年"+m+"月"+d+"日";
	console.log(today);
	
如何创建正则对象
	var str = "you can you up,no can no bb."
	1. var reg=/no/;
	2. RegExp reg = new RegExp("写入正则表达式");
	
	exec()方法
	1)普通模式
	console.log(reg.exec(str));
	2)全局模式
	//第N次调用则从str中出和reg相匹配的第N个字符串
	
	eval(str)--计算字符串，异常操作
	计算器的字符串可以直接计算
字符串支持正则的方法
	replace返回替换后的结果
	match返回匹配字符串的数组
	search返回匹配字符串的首字符位置索引
简述arguments对象的作用
	arguements是一个存储方法参数的数组，实现了重载方法
	内部可以通过遍历数组，获取参数
	

















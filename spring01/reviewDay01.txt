Spring是什么?
	开源的，用来简化企业级应用开发的应用开发框架
	jdbc	connection
	1 简化开发
		Spring对象用的api(比如jdbc)做了封装，这样，可以大大简化
		这些api的使用。(比如使用springjdbc访问数据库，就不用考虑
		如何获取连接和关闭连接了)
	2 解耦
		高内聚，低耦合。
			低耦合:对象之间不直接依赖
			高内聚:类的职责单一。
		Spring帮我们建立对象之间的依赖关系，这样，对象之间的耦合度
		会大大降低，代码的维护性会大大提高
	3 集成其他框架
		Spring可以将其他的一些框架集成进来
		例如:(定时任务处理Quartz	mybatis等),方便这些框架
		的使用。
		一站式框架

2 Spring容器
	(1)什么是Spring容器?
	Spring框架中的一个核心模块，用于管理对象
	(2)启动Spring容器
	step1.导包
	spring-webmvc
	step2.添加spring配置文件
	step.启动容器
	(3)创建对象
		1)方式一	无参构造
			step1.为类添加无参构造(或者缺省构造器)
			step2.在配置文件里面，添加一个bean元素。
			注:bean就是容器所创建的对象
			step3.启动容器，调用容器的getBean()方法
		2)方式二	静态工厂方法
		3)方式三	使用实例工厂方法
	(4)指定作用域--可以创建多个作用域
		1)默认情况下，容器对于每个Bean元素，只会创建一个实例。
		2)如果将作用域设置为prototype,则没调用一次getBean()方法
		就会创建一个实例。
	(5)延迟加载
		1)默认情况下，容器启动后之后，会将作用域为"singleton"的bean创建
		好。
		2)延迟加载指的是，容器启动之后，对作用域为"singleton"的bean不再
		创建，直到调用了getBean方法才会创建。
	(6)生命周期
		1)初始化方法
		容器创建好bean的实例之后，会立即调用初始化方法。
	
1 IOC/DI
	(1)什么是IOC(Inversion of Controll)控制反转
	对象的关系由容器来建立，不需要在一个类中new另一个对象
	把你需要的功能写在配置文件中，如果需要改对象，直接在配置
	文件修改就可以，不需要修改原理的对象，因为你需要的是功能，
	而不在乎它是那个对象，只要满足条件就可以了。--控制寻找对象
	(2)什么是DI(Dependency Injection 依赖注入)
	容器可以通过调用set方法或者构造器来建立对象之间的依赖关系。
	注意:
		IOC是目标，DI是手段。
	(3)依赖注入的两种方式
		1)方式一	set方法注入
		step1.添加set方法
		step2.在配置文件中，使用<property>元素来配置
		2)方式二	构造器注入
		step1.添加构造器
		step2.在配置文件中，使用<constructor-arg>元素来配置
	(4)自动装配(谅解)
		注:自动装配值得是容器依据某些规则，自动建立对象之间的依赖关系
		1)默认情况下，容器不会自动装配
		2)设置autowire属性
			byName:依据属性名查找对应的bean
	(5)注入基本类型的值
		使用value属性来注入，spring容器会帮我们做一些类型转换工作。
		比如将字符串转换为数字
		User
			name
			age
	(6)注入集合类型的值(List,Set,Map,Properties)
	方式一	直接注入
	方式二	引用方式注入
	step1.
			


















